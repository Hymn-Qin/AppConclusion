if(isModule.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def config = rootProject.ext.android
def library = rootProject.ext.dep
android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        if (!isModule.toBoolean()) {
            applicationId "com.qxj.welcome"
        }
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
//            }
//        }


        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }

    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest-debug.xml'
            }
        }
    }

    buildTypes {
        release {
            buildConfigField("boolean", "api", "true")
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("boolean", "api", "false")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'META-INF/xxx'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation library.support
    implementation library.constraint
    implementation library.kotlin
    implementation library.alibaba.json
    implementation library.alibaba.arouter

    implementation library.vector
    implementation library.lifecycle.lifecycle
    implementation library.lifecycle.viewmodel
    kapt library.alibaba.aroutercompiler
    implementation library.paging
    implementation library.kotlinx.coroutines
    implementation project(path: ':commonbase')
}
